"use strict";
function addInputField(t) {
  for (
    var count = $("#addinvoice tbody tr").length + 1,
      tab1 = 0,
      tab2 = 0,
      tab3 = 0,
      tab4 = 0,
      tab5 = 0,
      tab6 = 0,
      tab7 = 0,
      tab8 = 0,
      tab9 = 0,
      taxnumber = $("#txfieldnum").val(),
      tbfild = "",
      i = 0;
    i < taxnumber;
    i++
  ) {
    tbfild +=
      '<input id="total_tax' +
      i +
      "_" +
      count +
      '" class="total_tax' +
      i +
      "_" +
      count +
      '" type="hidden"><input id="all_tax' +
      i +
      "_" +
      count +
      '" class="total_tax' +
      i +
      '" type="hidden" name="tax[]">';
  }
  if (500 == count)
    alert("You have reached the limit of adding " + count + " inputs");
  else {
    var a = "product_name_" + count,
      tabindex = 5 * count,
      e = document.createElement("tr");
    (tab1 = tabindex + 1),
      (tab2 = tabindex + 2),
      (tab3 = tabindex + 3),
      (tab4 = tabindex + 4),
      (tab5 = tabindex + 5),
      (tab6 = tabindex + 6),
      (tab7 = tabindex + 7),
      (tab8 = tabindex + 8),
      (tab9 = tabindex + 9),
      (e.innerHTML =
        "<td><input type='text' name='product_name' onkeypress='invoice_productList(" +
        count +
        ");' class='form-control productSelection common_product' placeholder='Product Name' id='" +
        a +
        "' required tabindex='" +
        tab1 +
        "'><input type='hidden' class='common_product autocomplete_hidden_value  product_id_" +
        count +
        "' name='product_id[]' id='SchoolHiddenId'/></td><td><input type='text' name='desc[]'' class='form-control text-right ' /></td><td><select class='form-control' id='serial_no_" +
        count +
        "' name='serial_no[]'><option></option></select></td> <td><input type='text' name='available_quantity[]' id='' class='form-control text-right common_avail_qnt available_quantity_" +
        count +
        "' value='0' readonly='readonly' /></td><td><input class='form-control text-right common_name unit_" +
        count +
        " valid' value='None' readonly='' aria-invalid='false' type='text'></td><td> <input type='text' name='product_quantity[]' required='required' onkeyup='quantity_calculate(" +
        count +
        ");' onchange='quantity_calculate(" +
        count +
        ");' id='total_qntt_" +
        count +
        "' class='common_qnt total_qntt_" +
        count +
        " form-control text-right'  placeholder='0.00' min='0' tabindex='" +
        tab2 +
        "' value='1'/></td><td><input type='text' name='product_rate[]' onkeyup='quantity_calculate(" +
        count +
        ");' onchange='quantity_calculate(" +
        count +
        ");' id='price_item_" +
        count +
        "' class='common_rate price_item" +
        count +
        " form-control text-right' required placeholder='0.00' min='0' tabindex='" +
        tab3 +
        "'/></td><td><input type='text' name='discount[]' onkeyup='quantity_calculate(" +
        count +
        ");' onchange='quantity_calculate(" +
        count +
        ");' id='discount_" +
        count +
        "' class='form-control text-right common_discount' placeholder='0.00' min='0' tabindex='" +
        tab4 +
        "' /><input type='hidden' value='' name='discount_type' id='discount_type_" +
        count +
        "'></td><td class='text-right'><input class='common_total_price total_price form-control text-right' type='text' name='total_price[]' id='total_price_" +
        count +
        "' value='0.00' readonly='readonly'/></td><td>" +
        tbfild +
        "<input type='hidden' id='all_discount_" +
        count +
        "' class='total_discount' name='discount_amount[]'/><button tabindex='" +
        tab5 +
        "' style='text-align: center;' class='btn btn-danger btn-xs' type='button'  onclick='deleteRow(this)'><i class='fa fa-close'></i></button></td>"),
      document.getElementById(t).appendChild(e),
      document.getElementById(a).focus(),
      document
        .getElementById("add_invoice_item")
        .setAttribute("tabindex", tab6),
      document.getElementById("paidAmount").setAttribute("tabindex", tab7),
      document.getElementById("full_paid_tab").setAttribute("tabindex", tab8),
      document.getElementById("add_invoice").setAttribute("tabindex", tab9),
      count++;
  }
}
function quantity_calculate(item) {
  var quantity = $("#total_qntt_" + item).val(),
    available_quantity = $(".available_quantity_" + item).val(),
    price_item = $("#price_item_" + item).val(),
    discount = ($("#invoice_discount").val(), $("#discount_" + item).val()),
    vat_percent = $("#vat_percent_" + item).val(),
    total_tax = $("#total_tax_" + item).val(),
    taxnumber = ($("#total_discount_" + item).val(), $("#txfieldnum").val()),
    dis_type = $("#discount_type").val();
  if (
    0 == parseInt(available_quantity) &&
    parseInt(quantity) > parseInt(available_quantity)
  ) {
    var message = "This Item is Out of Stock";
    toastr.error(message),
      $("table#addinvoice tr#row_" + item).remove(),
      $("#image-active_" + item).removeClass("active"),
      $("#image-active_count_" + item).removeClass("quantity"),
      $("#active_pro_" + id).text(""),
      $("#total_qntt_" + item).val(0);
    quantity = 0;
    $("#total_price_" + item).val(0);
    for (var i = 0; i < taxnumber; i++)
      $("#all_tax" + i + "_" + item).val(0), quantity_calculate(item);
  }
  if (
    parseInt(available_quantity) > 0 &&
    parseInt(quantity) > parseInt(available_quantity)
  ) {
    message = "You can Sale maximum " + available_quantity + " Items";
    toastr.error(message),
      $("#total_qntt_" + item).val(available_quantity),
      quantity_calculate(item);
  }
  if (quantity > 0 || discount > 0 || vat_percent > 0) {
    if (1 == dis_type) {
      var dis = (+(price = quantity * price_item) * discount) / 100;
      $("#discount_value_" + item).val(dis),
        $("#all_discount_" + item).val(dis);
      var vat = (+(temp = price - dis) * vat_percent) / 100;
      $("#vat_value_" + item).val(vat);
      $("#total_price_" + item).val(temp);
      for (i = 0; i < taxnumber; i++) {
        var tax = temp * $("#total_tax" + i + "_" + item).val();
        Number(tax), $("#all_tax" + i + "_" + item).val(tax);
      }
    } else if (2 == dis_type) {
      var price = quantity * price_item;
      dis = discount * quantity;
      $("#discount_value_" + item).val(dis),
        $("#all_discount_" + item).val(dis);
      var temp;
      vat = (+(temp = price - dis) * vat_percent) / 100;
      $("#vat_value_" + item).val(vat), $("#total_price_" + item).val(temp);
      for (i = 0; i < taxnumber; i++) {
        tax = temp * $("#total_tax" + i + "_" + item).val();
        Number(tax), $("#all_tax" + i + "_" + item).val(tax);
      }
    } else if (3 == dis_type) {
      var total_price = quantity * price_item;
      dis = discount;
      $("#discount_value_" + item).val(dis),
        $("#all_discount_" + item).val(dis);
      vat = (+(price = total_price - dis) * vat_percent) / 100;
      $("#vat_value_" + item).val(vat), $("#total_price_" + item).val(price);
      for (i = 0; i < taxnumber; i++) {
        tax = price * $("#total_tax" + i + "_" + item).val();
        Number(tax), $("#all_tax" + i + "_" + item).val(tax);
      }
    }
  } else {
    var n = quantity * price_item,
      c = quantity * price_item * total_tax;
    $("#total_price_" + item).val(n), $("#all_tax_" + item).val(c);
  }
  calculateSum(item), invoice_paidamount(), image_activation(item);
}
function calculateSum(nid) {
  for (
    var e,
      taxnumber = $("#txfieldnum").val(),
      t = 0,
      p = 0,
      v = 0,
      f = 0,
      ad = 0,
      s_cost = $("#shipping_cost").val(),
      i = 0;
    i < taxnumber;
    i++
  ) {
    var j = 0;
    $(".total_tax" + i).each(function () {
      isNaN(this.value) ||
        0 == this.value.length ||
        (j += parseFloat(this.value));
    }),
      $("#total_tax_ammount" + i).val(j.toFixed(2, 2));
  }
  $(".total_discount").each(function () {
    isNaN(this.value) ||
      0 == this.value.length ||
      (p += parseFloat(this.value));
  }),
    $("#total_discount_ammount").val(p.toFixed(2, 2)),
    $(".total_vatamnt").each(function () {
      isNaN(this.value) ||
        0 == this.value.length ||
        (v += parseFloat(this.value));
    }),
    $("#total_vat_amnt").val(v.toFixed(2, 2)),
    $(".totalTax").each(function () {
      isNaN(this.value) ||
        0 == this.value.length ||
        (f += parseFloat(this.value));
    }),
    $("#total_tax_amount").val(f.toFixed(2, 2)),
    $(".total_price").each(function () {
      isNaN(this.value) ||
        0 == this.value.length ||
        (t += parseFloat(this.value));
    }),
    $(".dppr").each(function () {
      isNaN(this.value) ||
        0 == this.value.length ||
        (ad += parseFloat(this.value));
    }),
    (0).toFixed(2, 2),
    (e = t.toFixed(2, 2));
  var test = +f.toFixed(2, 2) + +s_cost + +e - p.toFixed(2, 2) + +ad;
  $("#grandTotal").val(test.toFixed(2, 2));
  var gt = $("#grandTotal").val(),
    vatamnt = ($("#invoice_discount").val(), $("#total_vat_amnt").val()),
    ttl_discount = +$("#total_discount_ammount").val();
  $("#total_discount_ammount").val(ttl_discount.toFixed(2, 2));
  var grnt_totals = parseFloat(gt) + parseFloat(vatamnt);
  invoice_paidamount(),
    $("#grandTotal").val(grnt_totals.toFixed(2, 2)),
    $("#pamount_by_method").val(grnt_totals),
    $("#paidAmount").val(grnt_totals);
  var invoice_edit_page = $("#invoice_edit_page").val();
  $("#preload_pay_view").val();
  if (
    ($("#add_new_payment").empty(),
    $("#pay-amount").text("0"),
    1 == invoice_edit_page)
  ) {
    var base_url = $("#base_url").val(),
      csrf_test_name = $('[name="csrf_test_name"]').val(),
      gtotal = $(".grandTotalamnt").val(),
      url = base_url + "invoice/invoice/bdtask_showpaymentmodal";
    $.ajax({
      type: "GET",
      url: url,
      data: { csrf_test_name: csrf_test_name },
      success: function (data) {
        $($("#add_new_payment").append(data)),
          $("#pamount_by_method").val(gtotal),
          $("#preload_pay_view").val("1");
      },
    });
  }
}
function changedueamount() {
  var inputval = parseFloat(0),
    maintotalamount = $(".grandTotalamnt").val();
  $(".number").each(function () {
    var inputdata = parseFloat($(this).val());
    inputval += inputdata;
  });
  var changes = (parseFloat(maintotalamount) - parseFloat(inputval)).toFixed(3);
  changes <= 0
    ? ($("#change-amount").text(Math.abs(changes)), $("#pay-amount").text(0))
    : ($("#change-amount").text(0), $("#pay-amount").text(changes));
}
function invoice_paidamount() {
  var prb = parseFloat($("#previous").val(), 10),
    pr = 0,
    d = 0,
    nt = 0;
  pr = 0 != prb ? prb : 0;
  var t = $("#grandTotal").val(),
    a = $("#paidAmount").val(),
    e = t - a,
    f = e + pr;
  (d = a - (nt = parseFloat(t, 10) + pr)),
    $("#pamount_by_method").val(a),
    $("#add_new_payment").empty(),
    $("#pay-amount").text("0"),
    $("#n_total").val(nt.toFixed(2, 2)),
    $("#net_total_text").text(nt.toFixed(2, 2)),
    e > 0
      ? ($("#dueAmmount").val(f.toFixed(2, 2)),
        $("#due_text").text(f.toFixed(2, 2)),
        a <= f && $("#change").val(0))
      : (a < f && $("#change").val(0),
        a > f && $("#change").val(d.toFixed(2, 2)),
        $("#dueAmmount").val(0),
        $("#due_text").text(0));
}
function stockLimit(t) {
  var a = $("#total_qntt_" + t).val(),
    e = $(".product_id_" + t).val(),
    o = $(".baseUrl").val();
  $.ajax({
    type: "POST",
    url: o + "Cinvoice/product_stock_check",
    data: { product_id: e },
    cache: !1,
    success: function (e) {
      (alert(e), a > Number(e)) &&
        (alert("You can Sale maximum " + e + " Items"),
        $("#qty_item_" + t).val("0"),
        $("#total_qntt_" + t).val("0"),
        $("#total_price_" + t).val("0"));
    },
  });
}
function stockLimitAjax(t) {
  var a = $("#total_qntt_" + t).val(),
    e = $(".product_id_" + t).val(),
    o = $(".baseUrl").val();
  $.ajax({
    type: "POST",
    url: o + "Cinvoice/product_stock_check",
    data: { product_id: e },
    cache: !1,
    success: function (e) {
      (alert(e), a > Number(e)) &&
        (alert("You can Sale maximum " + e + " Items"),
        $("#qty_item_" + t).val("0"),
        $("#total_qntt_" + t).val("0"),
        $("#total_price_" + t).val("0.00"),
        calculateSum());
    },
  });
}
function full_paid() {
  var grandTotal = $("#n_total").val();
  $("#paidAmount").val(grandTotal), invoice_paidamount(), calculateSum();
}
function deleteRow(t, nid) {
  if (1 == $("#addinvoice > tbody > tr").length)
    alert("There only one row you can't delete.");
  else {
    var e = t.parentNode.parentNode;
    e.parentNode.removeChild(e),
      calculateSum(),
      invoice_paidamount(),
      $("#active_pro_" + nid).text(""),
      $("#image-active_" + nid).removeClass("active"),
      $("#image-active_count_" + nid).removeClass("quantity");
    var current = 1;
    $("#addinvoice > tbody > tr td input.productSelection").each(function () {
      current++, $(this).attr("id", "product_name" + current);
    });
    var common_qnt = 1;
    $("#addinvoice > tbody > tr td input.common_qnt").each(function () {
      common_qnt++,
        $(this).attr("id", "total_qntt_" + common_qnt),
        $(this).attr("onkeyup", "quantity_calculate(" + common_qnt + ");"),
        $(this).attr("onchange", "quantity_calculate(" + common_qnt + ");");
    });
    var common_rate = 1;
    $("#addinvoice > tbody > tr td input.common_rate").each(function () {
      common_rate++,
        $(this).attr("id", "price_item_" + common_rate),
        $(this).attr("onkeyup", "quantity_calculate(" + common_qnt + ");"),
        $(this).attr("onchange", "quantity_calculate(" + common_qnt + ");");
    });
    var common_discount = 1;
    $("#addinvoice > tbody > tr td input.common_discount").each(function () {
      common_discount++,
        $(this).attr("id", "discount_" + common_discount),
        $(this).attr("onkeyup", "quantity_calculate(" + common_qnt + ");"),
        $(this).attr("onchange", "quantity_calculate(" + common_qnt + ");");
    });
    var common_total_price = 1;
    $("#addinvoice > tbody > tr td input.common_total_price").each(function () {
      common_total_price++,
        $(this).attr("id", "total_price_" + common_total_price);
    });
    var invoice_edit_page = $("#invoice_edit_page").val();
    if (
      ($("#add_new_payment").empty(),
      $("#pay-amount").text("0"),
      1 == invoice_edit_page)
    ) {
      var base_url = $("#base_url").val(),
        csrf_test_name = $('[name="csrf_test_name"]').val(),
        gtotal = $(".grandTotalamnt").val(),
        url = base_url + "invoice/invoice/bdtask_showpaymentmodal";
      $.ajax({
        type: "GET",
        url: url,
        data: { csrf_test_name: csrf_test_name },
        success: function (data) {
          $($("#add_new_payment").append(data)),
            $("#pamount_by_method").val(gtotal);
        },
      });
    }
  }
}
$(document).on("click", "#add_invoice", function () {
  var total = 0;
  $(".pay").each(function () {
    total += parseFloat($(this).val()) || 0;
  });
  var gtotal = $("#paidAmount").val();
  if (total != gtotal)
    return toastr.error("Paid Amount Should Equal To Payment Amount"), !1;
}),
  $(document).on("click", "#add_new_payment_type", function () {
    var base_url = $("#base_url").val(),
      csrf_test_name = $('[name="csrf_test_name"]').val(),
      gtotal = $("#paidAmount").val(),
      total = 0;
    if (
      ($(".pay").each(function () {
        total += parseFloat($(this).val()) || 0;
      }),
      total >= gtotal)
    )
      return alert("Paid amount is exceed to Total amount."), !1;
    var url = base_url + "invoice/invoice/bdtask_showpaymentmodal";
    $.ajax({
      type: "GET",
      url: url,
      data: { csrf_test_name: csrf_test_name },
      success: function (data) {
        $($("#add_new_payment").append(data)).show("slow", function () {});
        var length = $(".number").length;
        $(".number:eq(" + (length - 1) + ")").val(
          parseFloat($("#pay-amount").text())
        );
        var total2 = 0;
        $(".number").each(function () {
          total2 += parseFloat($(this).val()) || 0;
        }),
          $("#paidAmount").val(total2.toFixed(2, 2));
        var dueamnt = parseFloat(gtotal) - total2;
        $("#dueAmmount").val(dueamnt);
      },
    });
  });
var count = 2,
  limits = 500;
function customer_autocomplete(sl) {
  $("#customer_id").val();
  var options = {
    minLength: 0,
    source: function (request, response) {
      var customer_name = $("#customer_name").val(),
        csrf_test_name = $('[name="csrf_test_name"]').val(),
        base_url = $("#base_url").val();
      $.ajax({
        url: base_url + "invoice/invoice/bdtask_customer_autocomplete",
        method: "post",
        dataType: "json",
        data: {
          term: request.term,
          customer_id: customer_name,
          csrf_test_name: csrf_test_name,
        },
        success: function (data) {
          response(data);
        },
      });
    },
    focus: function (event, ui) {
      return $(this).val(ui.item.label), !1;
    },
    select: function (event, ui) {
      return (
        $(this)
          .parent()
          .parent()
          .find("#autocomplete_customer_id")
          .val(ui.item.value),
        customer_due(ui.item.value),
        $(this).unbind("change"),
        !1
      );
    },
  };
  $("body").on("keypress.autocomplete", "#customer_name", function () {
    $(this).autocomplete(options);
  });
}
function customer_due(id) {
  var csrf_test_name = $('[name="csrf_test_name"]').val(),
    base_url = $("#base_url").val();
  $.ajax({
    url: base_url + "invoice/invoice/previous",
    type: "post",
    data: { customer_id: id, csrf_test_name: csrf_test_name },
    success: function (msg) {
      $("#previous").val(msg);
    },
    error: function (xhr, desc, err) {
      alert("failed");
    },
  });
}
function onselectimage(id) {
  var product_id = id,
    base_url = $("#base_url").val(),
    csrf_test_name = $('[name="csrf_test_name"]').val(),
    exist = $("#SchoolHiddenId_" + product_id).val(),
    qty = $("#total_qntt_" + product_id).val(),
    add_qty = parseInt(qty) + 1,
    url = "",
    taxtype = $("#tax_type").val();
  ("fixed" == taxtype && (url = base_url + "invoice/invoice/gui_pos_invoice"),
  "dynamic" == taxtype &&
    (url = base_url + "invoice/invoice/gui_pos_invoice_dynamic"),
  product_id == exist)
    ? "" != $("#serial_no_" + product_id).val()
      ? ($("#total_qntt_" + product_id).val(add_qty),
        quantity_calculate(product_id),
        calculateSum(),
        invoice_paidamount(),
        image_activation(product_id),
        (document.getElementById("add_item").value = ""),
        document.getElementById("add_item").focus())
      : alert("Please Select Batch No")
    : $.ajax({
        type: "post",
        async: !1,
        url: url,
        data: { product_id: product_id, csrf_test_name: csrf_test_name },
        success: function (data) {
          0 == data
            ? (alert("This Product Not Found !"),
              (document.getElementById("add_item").value = ""),
              document.getElementById("add_item").focus(),
              quantity_calculate(product_id),
              calculateSum(),
              invoice_paidamount(),
              image_activation(product_id))
            : ((document.getElementById("add_item").value = ""),
              document.getElementById("add_item").focus(),
              $("#addinvoice tbody").append(data),
              quantity_calculate(product_id),
              calculateSum(),
              invoice_paidamount(),
              image_activation(product_id),
              setTimeout(function () {
                $("#hidden_tr").css("display", "none");
              }, 1e3));
        },
        error: function () {
          alert("Request Failed, Please check your code and try again!");
        },
      });
}
function getslcategory(category_id) {
  $("#base_url").val();
  var csrf_test_name = $('[name="csrf_test_name"]').val(),
    product_name = $("#product_name").val(),
    myurl = $("#posurl").val();
  $.ajax({
    type: "post",
    async: !1,
    url: myurl,
    data: {
      product_name: product_name,
      category_id: category_id,
      csrf_test_name: csrf_test_name,
    },
    success: function (data) {
      $("#product_search").html(data);
    },
    error: function () {
      alert("Request Failed, Please check your code and try again!");
    },
  });
}
function check_category(category) {
  $("#base_url").val();
  var csrf_test_name = $('[name="csrf_test_name"]').val(),
    myurl = $("#posurl").val();
  $.ajax({
    type: "post",
    async: !1,
    url: myurl,
    data: { category_id: category, csrf_test_name: csrf_test_name },
    success: function (data) {
      $("#product_search").html(data);
    },
    error: function () {
      alert("Request Failed, Please check your code and try again!");
    },
  });
}
function image_activation(id) {
  var qty = $("#total_qntt_" + id).val();
  $("#image-active_" + id).addClass("active"),
    $("#image-active_count_" + id).addClass("quantity");
  $("#active_pro_" + id).text(qty);
}
function checkallCategory() {
  $("#box-0").change(function () {
    $(this).is(":checked")
      ? $(".cat-check").each(function () {
          $(this).prop("checked", !0), check_category();
        })
      : $(".cat-check").each(function () {
          $(this).prop("checked", !1), check_category();
        });
  });
}
function detailsmodal(productname, stock, model, unit, price, image) {
  $("#detailsmodal").modal("show");
  document.getElementById("baseurl").value;
  (document.getElementById("modal_productname").innerHTML = productname),
    (document.getElementById("modal_productstock").innerHTML = stock),
    (document.getElementById("modal_productmodel").innerHTML = model),
    (document.getElementById("modal_productunit").innerHTML = unit),
    (document.getElementById("modal_productprice").innerHTML = price),
    (document.getElementById("modalimg").innerHTML =
      '<img src="' +
      image +
      '" alt="image" style="width:100px; height:60px;" />');
}
function bank_info_show(payment_type) {
  "1" == payment_type.value
    ? (document.getElementById("bank_info_hide").style.display = "none")
    : (document.getElementById("bank_info_hide").style.display = "block");
}
function active_customer(status) {
  "payment_from_2" == status
    ? ((document.getElementById("payment_from_2").style.display = "none"),
      (document.getElementById("payment_from_1").style.display = "block"),
      (document.getElementById("myRadioButton_2").checked = !1),
      (document.getElementById("myRadioButton_1").checked = !0))
    : ((document.getElementById("payment_from_1").style.display = "none"),
      (document.getElementById("payment_from_2").style.display = "block"),
      (document.getElementById("myRadioButton_2").checked = !1),
      (document.getElementById("myRadioButton_1").checked = !0));
}
function bank_paymet(val) {
  if (2 == val) {
    var style = "block";
    document.getElementById("bank_id").setAttribute("required", !0);
  } else {
    style = "none";
    document.getElementById("bank_id").removeAttribute("required");
  }
  document.getElementById("bank_div").style.display = style;
}
function cancelprint() {
  location.reload();
}
function invoice_productList(sl) {
  var csrf_test_name = $('[name="csrf_test_name"]').val(),
    base_url = $("#base_url").val(),
    priceClass = "price_item" + sl,
    available_quantity = "available_quantity_" + sl,
    unit = "unit_" + sl,
    tax = "total_tax_" + sl,
    serial_no = "serial_no_" + sl,
    discount_type = "discount_type_" + sl,
    options = {
      minLength: 0,
      source: function (request, response) {
        var product_name = $("#product_name_" + sl).val();
        $.ajax({
          url: base_url + "invoice/invoice/bdtask_autocomplete_product",
          method: "post",
          dataType: "json",
          data: {
            term: request.term,
            product_name: product_name,
            csrf_test_name: csrf_test_name,
          },
          success: function (data) {
            response(data);
          },
        });
      },
      focus: function (event, ui) {
        return $(this).val(ui.item.label), !1;
      },
      select: function (event, ui) {
        $(this)
          .parent()
          .parent()
          .find(".autocomplete_hidden_value")
          .val(ui.item.value),
          $(this).val(ui.item.label);
        var sl = $(this).parent().parent().find(".sl").val(),
          id = ui.item.value,
          base_url = $(".baseUrl").val();
        return (
          $.ajax({
            type: "POST",
            url: base_url + "invoice/invoice/retrieve_product_data_inv",
            data: { product_id: id, csrf_test_name: csrf_test_name },
            cache: !1,
            success: function (data) {
              for (
                var obj = jQuery.parseJSON(data), i = 0;
                i < obj.txnmber;
                i++
              ) {
                obj.taxdta[i];
                $("." + ("total_tax" + i + "_" + sl)).val(obj.taxdta[i]);
              }
              $("." + priceClass).val(obj.price),
                $("." + available_quantity).val(
                  obj.total_product.toFixed(2, 2)
                ),
                $("." + unit).val(obj.unit),
                $("." + tax).val(obj.tax),
                $("#txfieldnum").val(obj.txnmber),
                $("#" + serial_no).html(obj.serial),
                $("#" + discount_type).val(obj.discount_type),
                quantity_calculate(sl);
            },
          }),
          $(this).unbind("change"),
          !1
        );
      },
    };
  $("body").on("keypress.autocomplete", ".productSelection", function () {
    $(this).autocomplete(options);
  });
}
function printRawHtml(view) {
  printJS({
    printable: view,
    type: "raw-html",
    onPrintDialogClose: printJobComplete(),
  });
}
function printJobComplete() {
  var invoice_no = $("#gui_invoice_no").text();
  parseInt(invoice_no);
  $("#addinvoice tbody tr").remove(),
    $("#gui_sale_insert").trigger("reset"),
    $("#n_total").val(""),
    $("#net_total_text").text("0.00"),
    $("#dueAmmount").val(""),
    $("#due_text").text("0.00"),
    invoice_no_check();
}
function invoice_no_check() {
  var base_url = $("#base_url").val();
  $.ajax({
    url: base_url + "invoice/invoice/number_generator_ajax",
    method: "GET",
    dataType: "json",
    success: function (msg) {
      $("#gui_invoice_no").text(msg),
        $("#invoice_no").val(msg),
        console.log(msg);
    },
    error: function (xhr, desc, err) {
      alert("Failed to fetch invoice number. Please try again."),
        console.error("Error:", err);
    },
  });
}
function invoice_product_batch(sl) {
  var base_url = $(".baseUrl").val(),
    csrf_test_name = $('[name="csrf_test_name"]').val(),
    prod_id = $(".product_id_" + sl).val(),
    batch_no = $("#serial_no_" + sl).val(),
    taxnumber = $("#txfieldnum").val(),
    available_quantity = $(".available_quantity_" + sl).val();
  $.ajax({
    url: base_url + "invoice/invoice/bdtask_batchwise_productprice",
    method: "post",
    dataType: "json",
    data: {
      prod_id: prod_id,
      batch_no: batch_no,
      csrf_test_name: csrf_test_name,
    },
    success: function (data) {
      if (parseInt(data) >= 0)
        $(".available_quantity_" + sl).val(data.toFixed(2, 2));
      else {
        var message = "You can Sale maximum " + available_quantity + " Items";
        toastr.error(message), $("#total_qntt_" + sl).val("");
        $("#total_price_" + sl).val(0);
        for (var i = 0; i < taxnumber; i++)
          $("#all_tax" + i + "_" + sl).val(0), quantity_calculate(sl);
      }
    },
  });
}
function check_creditsale() {
  var card_typesl = $(".card_typesl").val();
  if ((console.log({ card_typesl: card_typesl }), 0 == card_typesl)) {
    $("#add_new_payment").empty();
    var gtotal = $(".grandTotalamnt").val();
    $("#pamount_by_method").val(gtotal),
      $("#paidAmount").val(0),
      $("#dueAmmount").val(gtotal),
      $(".number:eq(0)").val(0),
      $("#add_new_payment_type").prop("disabled", !0);
  } else $("#add_new_payment_type").prop("disabled", !1);
  $("#pay-amount").text("0");
  var invoice_edit_page = $("#invoice_edit_page").val(),
    is_credit_edit = $("#is_credit_edit").val();
  if (1 == invoice_edit_page && 0 == card_typesl) {
    $("#add_new_payment").empty();
    var base_url = $("#base_url").val(),
      csrf_test_name = $('[name="csrf_test_name"]').val(),
      url =
        ((gtotal = $(".grandTotalamnt").val()),
        base_url + "invoice/invoice/bdtask_showpaymentmodal");
    $.ajax({
      type: "post",
      url: url,
      data: { csrf_test_name: csrf_test_name, is_credit_edit: is_credit_edit },
      success: function (data) {
        $("#add_new_payment").append(data),
          $("#pamount_by_method").val(gtotal),
          $("#add_new_payment_type").prop("disabled", !0);
      },
    });
  }
}
$(document).ready(function () {
  $("#full_paid_tab").keydown(function (event) {
    13 == event.keyCode && $("#add_invoice").trigger("click");
  });
}),
  $(document).ready(function () {
    var frm = $("#gui_sale_insert"),
      invoice_no = ($("#output"), $("#gui_invoice_no").text()),
      nextinvoice = parseInt(invoice_no) + 1;
    frm.on("submit", function (e) {
      e.preventDefault(),
        $.ajax({
          url: $(this).attr("action"),
          method: $(this).attr("method"),
          dataType: "json",
          data: frm.serialize(),
          success: function (data) {
            1 == data.status
              ? (toastr.success(data.message),
                $(".quantity").removeClass("quantity"),
                $(".product-panel").removeClass("active"),
                $(".active_qty").text(""),
                swal(
                  {
                    title: "Success!",
                    showCancelButton: !0,
                    cancelButtonText: "NO",
                    cancelButtonColor: "red",
                    confirmButtonText: "Yes",
                    confirmButtonColor: "#008000",
                    text: "Do You Want To Print ?",
                    type: "success",
                  },
                  function (inputValue) {
                    !0 === inputValue
                      ? ($("#addinvoice tbody tr").remove(),
                        $("#gui_sale_insert").trigger("reset"),
                        $("#n_total").val(""),
                        $("#net_total_text").text("0.00"),
                        $("#dueAmmount").val(""),
                        $("#due_text").text("0.00"),
                        $("#invoice_no").val(nextinvoice),
                        $("#gui_invoice_no").text(nextinvoice),
                        $(".card_typesl").val(null).trigger("change"),
                        printRawHtml(data.details))
                      : ($("#addinvoice tbody tr").remove(),
                        $("#gui_sale_insert").trigger("reset"),
                        $("#n_total").val(""),
                        $("#net_total_text").text("0.00"),
                        $("#dueAmmount").val(""),
                        $("#due_text").text("0.00"),
                        $("#invoice_no").val(nextinvoice),
                        $("#gui_invoice_no").text(nextinvoice),
                        $(".card_typesl").val(null).trigger("change"),
                        invoice_no_check());
                  }
                ),
                $("#inv_id").val(data.invoice_id),
                1 == data.status && event.keyCode)
              : toastr.error(data.exception);
          },
          error: function (xhr) {
            alert("failed!");
          },
        });
    });
  }),
  $("body").on("keyup", "#product_name", function () {
    var product_name = $(this).val(),
      csrf_test_name = $('[name="csrf_test_name"]').val(),
      myurl = $("#posurl_productname").val();
    $.ajax({
      type: "post",
      async: !1,
      url: myurl,
      data: { product_name: product_name, csrf_test_name: csrf_test_name },
      success: function (data) {
        "420" == data
          ? $("#product_search").html(
              '<h1 class"srcalrt">Product not found !</h1>'
            )
          : $("#product_search").html(data);
      },
      error: function () {
        alert("Request Failed, Please check your code and try again!");
      },
    });
  }),
  $("body").on("click", "#search_button", function () {
    var product_name = $("#product_name").val(),
      csrf_test_name = $('[name="csrf_test_name"]').val(),
      category_id = $("#category_id").val(),
      myurl = $("#posurl").val();
    $.ajax({
      type: "post",
      async: !1,
      url: myurl,
      data: {
        product_name: product_name,
        category_id: category_id,
        csrf_test_name: csrf_test_name,
      },
      success: function (data) {
        "420" == data
          ? $("#product_search").html(
              '<h1 class"srcalrt text-center">Product not found !</h1>'
            )
          : $("#product_search").html(data);
      },
      error: function () {
        alert("Request Failed, Please check your code and try again!");
      },
    });
  }),
  $(document).on("click", ".taxbutton", function (e) {
    var $this = $(this);
    $this.find("i").hasClass("fa fa-angle-double-up")
      ? $this
          .find("i")
          .removeClass("fa fa-angle-double-up")
          .addClass("fa fa-angle-double-down")
      : $this
          .find("i")
          .removeClass("fa fa-angle-double-down")
          .addClass("fa fa-angle-double-up");
  }),
  $(document).ready(function () {
    $(".paymentpart").click(function () {
      var $header = $(this),
        $content = $header.next();
      $content.slideToggle(500, function () {
        $header.html(function () {
          return $content.is(":visible")
            ? "<span  class='btn btn-warning'><i class='fa fa-angle-double-down'></i></span>"
            : "<span  class='btn btn-warning'><i class='fa fa-angle-double-up'></i></span>";
        });
      });
    });
  }),
  $(document).ready(function () {
    $("#addinvoice .toggle").on("click", function () {
      $("#addinvoice .hideableRow").toggleClass("hiddenRow");
    }),
      $(".bankpayment").css("width", "100%");
  }),
  $(document).ready(function () {
    var barcodeScannerTimerP,
      barcodeStringPos = "";
    $("#add_item_m_p").keydown(function (e) {
      if (13 == e.keyCode) {
        var product_id = $(this).val(),
          exist =
            ((product_id = $(this).val()),
            $("#SchoolHiddenId_" + product_id).val()),
          qty = $("#total_qntt_" + product_id).val(),
          add_qty = parseInt(qty) + 1,
          csrf_test_name = $('[name="csrf_test_name"]').val(),
          base_url = $("#base_url").val();
        product_id == exist
          ? ($("#total_qntt_" + product_id).val(add_qty),
            quantity_calculate(product_id),
            calculateSum(),
            invoice_paidamount(),
            (document.getElementById("add_item_m_p").value = ""),
            document.getElementById("add_item_m_p").focus())
          : $.ajax({
              type: "post",
              async: !1,
              url: base_url + "invoice/invoice/insert_pos_invoice",
              data: { product_id: product_id, csrf_test_name: csrf_test_name },
              success: function (data) {
                0 == data
                  ? (alert("This Product Not Found !"),
                    (document.getElementById("add_item_m_p").value = ""),
                    document.getElementById("add_item_m_p").focus(),
                    quantity_calculate(product_id),
                    calculateSum(),
                    invoice_paidamount())
                  : ($("#hidden_tr").css("display", "none"),
                    (document.getElementById("add_item_m_p").value = ""),
                    document.getElementById("add_item_m_p").focus(),
                    $("#addinvoice tbody").append(data),
                    quantity_calculate(product_id),
                    calculateSum(),
                    invoice_paidamount());
              },
              error: function () {
                alert("Request Failed, Please check your code and try again!");
              },
            });
      }
    }),
      $("#add_item_p").on("keypress", function (e) {
        (barcodeStringPos += String.fromCharCode(e.charCode)),
          clearTimeout(barcodeScannerTimerP),
          (barcodeScannerTimerP = setTimeout(function () {
            !(function () {
              if ("" != barcodeStringPos) {
                var product_id = barcodeStringPos,
                  exist = $("#SchoolHiddenId_" + product_id).val(),
                  qty = $("#total_qntt_" + product_id).val(),
                  add_qty = parseInt(qty) + 1,
                  csrf_test_name = $('[name="csrf_test_name"]').val(),
                  base_url = $("#base_url").val();
                product_id == exist
                  ? ($("#total_qntt_" + product_id).val(add_qty),
                    quantity_calculate(product_id),
                    calculateSum(),
                    invoice_paidamount(),
                    (document.getElementById("add_item_p").value = ""),
                    document.getElementById("add_item_p").focus())
                  : $.ajax({
                      type: "post",
                      async: !1,
                      url: base_url + "invoice/invoice/insert_pos_invoice",
                      data: {
                        product_id: product_id,
                        csrf_test_name: csrf_test_name,
                      },
                      success: function (data) {
                        0 == data
                          ? (alert("This Product Not Found !"),
                            (document.getElementById("add_item_p").value = ""),
                            document.getElementById("add_item_p").focus(),
                            quantity_calculate(product_id),
                            calculateSum(),
                            invoice_paidamount())
                          : ($("#hidden_tr").css("display", "none"),
                            (document.getElementById("add_item_p").value = ""),
                            document.getElementById("add_item_p").focus(),
                            $("#addinvoice tbody").append(data),
                            quantity_calculate(product_id),
                            calculateSum(),
                            invoice_paidamount());
                      },
                      error: function () {
                        alert(
                          "Request Failed, Please check your code and try again!"
                        );
                      },
                    });
              } else alert("barcode is invalid: " + barcodeStringPos);
              barcodeStringPos = "";
            })();
          }, 300));
      });
  }),
  $(document).ready(function () {
    var frm = $("#pos_sale_insert");
    $("#output");
    frm.on("submit", function (e) {
      e.preventDefault(),
        $.ajax({
          url: $(this).attr("action"),
          method: $(this).attr("method"),
          dataType: "json",
          data: frm.serialize(),
          success: function (data) {
            1 == data.status
              ? (toastr.success(data.message),
                $("#image-active_count_54258082").removeClass("quantity"),
                $("#inv_id").val(data.invoice_id),
                $("#printconfirmodal").modal("show"),
                $("#pos_sale_insert").trigger("reset"),
                1 == data.status && event.keyCode)
              : toastr.error(data.exception);
          },
          error: function (xhr) {
            alert("failed!");
          },
        });
    });
  }),
  $("#printconfirmodal").on("keydown", function (e) {
    13 == (e.which || e.keyCode) && $("#yes").trigger("click");
  }),
  (window.onload = function () {
    $("body").addClass("sidebar-mini sidebar-collapse");
  }),
  $(".product-grid").each(function () {
    new PerfectScrollbar($(this)[0]);
  }),
  $(document).ready(function () {
    Mousetrap.bind("ctrl+s", function (e) {
      e.preventDefault ? e.preventDefault() : (e.returnValue = !1),
        $("#add_invoice").trigger("click");
    }),
      Mousetrap.bind("shift+c", function () {
        $("#cust_info").modal(),
          setTimeout(function () {
            $("#m_customer_name").focus();
          }, 500);
      }),
      Mousetrap.bind("shift+f", function () {
        $("#full_paid_tab").trigger("click");
      }),
      Mousetrap.bind("shift+l", function () {
        $("#todays_salelist").trigger("click");
      }),
      Mousetrap.bind("shift+n", function () {
        $("#new_sale").trigger("click");
      }),
      Mousetrap.bind("alt+c", function () {
        $("#calculator_modal").trigger("click");
      }),
      Mousetrap.bind("alt+n", function () {
        $("#customer_name").focus();
      }),
      Mousetrap.bind("ctrl+d", function (e) {
        e.preventDefault ? e.preventDefault() : (e.returnValue = !1),
          $("#invoice_discount").focus();
      }),
      Mousetrap.bind("alt+p", function () {
        $("#paidAmount").focus();
      }),
      Mousetrap.bind("alt+s", function () {
        $("#shipping_cost").focus();
      });
  });
